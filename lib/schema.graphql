"Valido los Tipos de Nivel"
enum Level {
  principiente
  intermedio
  avanzado
}


"SCHEMAS"

type Course {
  _id: ID!
  title: String!
  teacher: String!
  description: String!
  topic: String!
  people: [Student]
  level: Level
}

type Student implements Person {
  _id: ID!
  name: String!
  email: String!
  avatar: String
}
" INTERFACES"

interface Person {
  _id: ID!
  name: String!
  email: String!
}

type Monitor implements Person{
  _id: ID!
  name: String!
  email: String!
  phone: String
}
  
"QUERY'S"

type Query {
  ### Courses
  "Devuelve todos los cursos"
  getCourses: [Course]
  "Devuelve un curso"
  getCourse(_id: ID!): Course

  ### Students
  "Devuelve todos los Students"
  getStudents: [Student]
  "Get one student"
  getStudent(_id: ID): Student
}

"INPUTS"
input CourseInput {
  title: String!
  teacher: String!
  description: String!
  topic: String!
  level: Level 
}
input CourseEditInput {
  title: String
  teacher: String
  description: String
  topic: String
  level: Level 

}
input StudentInput{
  name: String!
  email: String!
}
input StudentEditInput{
  name: String
  email: String
}

"MUTATIONS"
type Mutation {
  ###Courses
  "Crear un curso"
  createCourse(input: CourseInput!): Course
  "Edita un Curso"
  editCourse(_id: ID!, input: CourseEditInput): Course
  ###Students  
  "Crear Student"
  createStudent(input: StudentInput!):Student
  "Edit Student"
  editStudent(_id: ID!, input: StudentEditInput): Student
  "Agregar persona a Curso"
  addPeople(courseId: ID!, personId: ID!):Course
}
