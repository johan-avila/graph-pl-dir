"Valido los Tipos de Nivel"

enum Level {
  principiente
  intermedio
  avanzado
}


" INTERFACES"
interface Person {
  _id: ID!
  name: String!
  email: String!
}
"SCHEMAS"

type Course {
  _id: ID!
  title: String!
  teacher: String!
  description: String!
  topic: String! @deprecated
  people: [Student]
  level: Level
}

type Student implements Person {
  _id: ID!
  name: String!
  email: String!
  avatar: String
}

type Monitor implements Person{
  _id: ID!
  name: String!
  email: String!
  phone: String
}

"UNIONS"
union GlobalSearch = Course | Student | Monitor
  
"QUERY'S"

type Query {
  ### Courses
  "Devuelve todos los cursos"
  getCourses: [Course]
  "Devuelve un curso"
  getCourse(_id: ID!): Course

  ### Students
  "Devuelve todos los Students"
  getPeople: [Person]
  "Get one student"
  getPerson(_id: ID): Person
  ###Global search
  "Ejecuta una busqueda global"
  searchItems(keyword: String!): [GlobalSearch]
}



"INPUTS"
input CourseInput {
  title: String!
  teacher: String!
  description: String!
  topic: String!
  level: Level 
}
input CourseEditInput {
  title: String
  teacher: String
  description: String
  topic: String
  level: Level 

}
input PersonInput{
  name: String!
  email: String!
  phone:String
  avatar:String
}
input PersonEditInput{
  name: String
  email: String
  phone:String
  avatar:String
}

"MUTATIONS"
type Mutation {
  ###Courses
  "Crear un curso"
  createCourse(input: CourseInput!): Course
  "Edita un Curso"
  editCourse(_id: ID!, input: CourseEditInput): Course
  ###Students  
  "Crear Persona"
  createPerson(input: PersonInput!):Person
  "Edit Persona"
  editPerson(_id: ID!, input: PersonEditInput): Person
  "Agregar persona a Curso"
  addPeople(courseId: ID!, personId: ID!):Course
  # Me faltan los Delete
}
